import java.io.File
import java.io.FileInputStream
import java.io.FileOutputStream
import java.io.InputStream

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */


plugins {
    id("base")
}

apply<org.example.greeting.GreetingPlugin>()


tasks.create<Copy>("copy") {
    description = "Copies sources to the dest directory"
    group = "Custom"

    from("e:\\src")
    into("e:\\dest")
}

tasks.create<Zip>("zip") {
    from("e:\\gradletest")
    setArchiveName("test_zip.zip")
}

open class Greeting : DefaultTask() {
    lateinit var message: String
    lateinit var recipient: String

    @TaskAction
    fun sayGreeting() {
//        println("$message  $recipient")
//        Runtime.getRuntime().exec("gradlew zip")
    }
}

//tasks.register<Greeting>("hello") {
//    message = "hello"
//    recipient = "world"
//}

tasks.register("testDsl") {
    kotlinDsl {
        id = "007"
        name = "yuliyang"
    }
}

data class KotlinDslModel(var id: String = "", var name: String = "", var src: String = "")

fun kotlinDsl(init: KotlinDslModel.() -> Unit) {
    val dslModel = KotlinDslModel()
    dslModel.init()
//    project.getTasks().create<Copy>("copyInDsl") {
//        description = "Copies sources to the dest directory"
//        group = "Custom"
//
//        from("e:\\src")
//        into("e:\\dest")
//    }

    val buildFile: File = File("${project.buildDir}")
    println(srcFile.length())
    val src = FileInputStream("${buildFile.parentFile.absolutePath}\\src\\test.txt")
    val dest = FileOutputStream("${buildFile.parentFile.absolutePath}\\dest\\copy.txt")
    val byteArray = ByteArray(1024)
//    var hasRead = 0
    while (src.read(byteArray) != -1) {
        dest.write(byteArray)
    }
    src.close()
    dest.close()
    println("${dslModel.id}    ${dslModel.name}")
}



